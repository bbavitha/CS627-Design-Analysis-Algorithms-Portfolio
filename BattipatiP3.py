# -*- coding: utf-8 -*-
"""Battipati_Assignment3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Nt4ZGOQ7ke0ddQDW1Qnq8HmmFoaJKKVH
"""

# Define the function
def organizeFilesOnDisks(numFiles, fileSizes, numDisks, diskCapacities):
    # Initialize output: track the disk assigned to each file
    diskAssignments = [-1] * numFiles  # -1 indicates unassigned

    # Copy the disk capacities to track remaining space
    availableSpace = diskCapacities[:]

    # Pair each file size with its index and sort in descending order of size
    fileInfo = [(fileSizes[i], i) for i in range(numFiles)]
    fileInfo.sort(key=lambda x: x[0], reverse=True)

    # Iterate through the sorted files
    for fileSize, fileIndex in fileInfo:
        # Initialize variables to track the best fit for the current file
        chosenDisk = -1
        smallestWaste = float('inf')

        # Check all disks to find the best fit
        for diskIndex in range(numDisks):
            if availableSpace[diskIndex] >= fileSize:
                wasteSpace = availableSpace[diskIndex] - fileSize
                if wasteSpace < smallestWaste:
                    chosenDisk = diskIndex
                    smallestWaste = wasteSpace

        # Assign the file to the chosen disk if found
        if chosenDisk != -1:
            diskAssignments[fileIndex] = chosenDisk
            availableSpace[chosenDisk] -= fileSize

    # Return the final assignment of files to disks
    return diskAssignments